#font-size: 
The font-size property sets the size of the text.
Default font-size in percent for the <body> element:
body {
    font-size: 100%;
}
#box-sizing:
The box-sizing property defines how the width and height of an element are calculated: should they include padding and borders, or not.
box-sizing: content-box|border-box|initial|inherit;
content-box: Default. The width and height properties (and min/max properties) includes only the content. Border and padding are not included
border-box: The width and height properties (and min/max properties) includes content, padding and border.
Set the "universal box-sizing":
* {
  box-sizing: border-box;
} 

#height:
height: auto|length|initial|inherit;
auto 	The browser calculates the height. This is default
length 	Defines the height in px, cm, etc.
% 	Defines the height in percent of the containing block

VH
Viewport Height (vh) â€“ A percentage of the full viewport height. 10vh will resolve to 10% of the 
current viewport height. (ref: https://css-tricks.com/fun-viewport-units/)

height: 100vh; means the height of this element is equal to 100% of the viewport height.
example: height: 50vh;
If your screen height is 1000px, your element height will be equal to 500px (50% of 1000px)

#margin:
The CSS margin properties are used to create space around elements, outside of any defined borders.
CSS has properties for specifying the margin for each side of an element:
  p {
    margin-top: 100px;
    margin-bottom: 100px;
    margin-right: 150px;
    margin-left: 80px;
  }
If the margin property has four values:
    margin: 25px 50px 75px 100px;
        top margin is 25px
        right margin is 50px
        bottom margin is 75px
        left margin is 100px

If the margin property has three values:
    margin: 25px 50px 75px;
        top margin is 25px
        right and left margins are 50px
        bottom margin is 75px

#CSS Grid:
Ref: https://www.w3schools.com/css/css_grid.asp
Grid Layout
The CSS Grid Layout Module offers a grid-based layout system, with rows and columns.
Grid Elements: A grid layout consists of a parent element, with one or more child elements.
  <div class="grid-container">
    <div class="grid-item">1</div>
    <div class="grid-item">2</div>
    <div class="grid-item">3</div>
  </div>
.grid-container {
  display: grid;
  grid-template-columns: 80px 200px auto 40px;
  grid-template-rows: 80px 200px;
}
~CSS Grid Container: To make an HTML element behave as a grid container, you have to set the display property to grid or inline-grid.
Grid containers consist of grid items, placed inside columns and rows.
~The grid-template-columns property defines the number of columns in your grid layout, and it can define the width of each column.
~The grid-template-rows property defines the height of each row.

#flex
To make element in position center, flex is being used.





Note:
.The default text size in browsers is 16px.
.So, the default size of 1em is 16px. The em size unit is recommended by the W3C.
.The size can be calculated from pixels to em using this formula: pixels/16=em. 
.The height property sets the height of an element. The height of an element does not include padding, borders, or margins!.
.An HTML element becomes a grid container when its display property is set to grid or inline-grid.
.A grid container contains grid items.
. 1 rem = 10 px