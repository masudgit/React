#Create a React Starter APP
npx create-react-app react-shopping-cart

#Start project:
 cd react-shopping-cart
 yarn start/npm start
 yarn build/npm run build 
 
# Remove un-used files:
logo.svg
setupTests.js
serviceWorker.js
App.test.js
App.css
 
#VSCode Extentions:
install ES7 React....
rcc shorcart for a react component

#Project Development Workflow
~Create github repository:
https://github.com/masudgit
click on new repository: react-shopping-cart
create repository
Follow this steps:
    â€¦or push an existing repository from the command line
    i)git remote add origin https://github.com/masudgit/react-shopping-cart.git
    ii)git branch -M main
    iii)git push -u origin main

cmd: 
>git config --list
>git config --global user.name "masudgit"
>git config --global user.email masud.cseu@gmail.com

Open VScode and point the newly created folder: react-shopping-cart
Click the + button
Now add a top repository as a remote repository for my current project. by command i)
Now Commit: First Commit and hit enter
Synchronizing changes/Publish changes

~Click master at the bottom left. [note: master is the main branch]
+ Create new branch [We are going to create a new branch as for each branch we want to implement an individual feature] e.g: feature-1
make some changes 
Commit and publish to the new branch.
Go at : https://github.com/masudgit/react-shopping-cart
It will ask - Compare & pull request [Asking to compare and manage this changes with the master branch]
Click on Compare & pull request
Click on Create pull request 
Click on Merge pull request and then Confirm merge.

Go at https://github.com/masudgit/react-shopping-cart and see the msg: Merge pull request #1 from masudgit/feature-1
Click on Pull requests, click on feature-1.
You have the capability of comparing your changes to the master.
Click on Files changed. 
So large features you will know exactly a step by step, which part of code has been change added or deleted.

Click master at the bottom left. and move to the master branch.
We know there are two changes that need to be fetched from server. 
Click on Synchronizing changes, it's pooling fetching data from github and updating your main branch, the master branch.

This is the whole process of creating a feature in Google's spreadsheet make it done, creating a branch in VSCode, publish this branch, pull request and merge that branch into the master, and then come back again to VSCode, switch to master and then synchronize your latest change inside the branch.

#Product Component:
ctrl + p : to find a file in project.

#Convert JS Object to String: JSON.stringify(object)
#Convert String to JS Object: JSON.parse(string)

#e.preventDefaults():
event object is raised by the form.
not going to refresh the page when user click on submit button

#Backend: 
yarn add express body-parser mongoose shortid
express: as a webserver
body-parser: to parse data inside a post request to the server
mongoose: it connects us to the mondodb database
shortid: is a library, to create user friendly id, saved as a product.

#Install Software:
https://www.mongodb.com/try/download/community

#Redux:
reducers: has two i)current state ii)action types
store: first parameter reducer, second parameter initialStore, third parameter middlewares(e.g: redux-thunk) 
compose: to compose all middlewares together, 
middlewares:
 i)redux-thunk
 ii)redux dev tools for chrome.
 
#connect: accept two parameters. 
i)function which accept state, and return an object , that define which part of redux state, we are going to use. 
ii)list of actions. 
connect function itself retuan another function, the another function accept parameters and the parameter is 
the name of component we are going to use. 
OR
i) map state to props 
ii)mapping actions
And for the connect function, we need to define a component that is gonna be wrapped inside the redux store. 

#Browser Extentions:
React Dev Tools
Redux Dev Tools

#Action: (dispatch action to the reducers)
~As we are using react-thunk, we need to return another function, this function has dispatch parameter, 
inside this function, we need to dispatch an action that change  the redux store. 
~An action is an object. There are two values for each action i)Action type ii)payload (an object)
 e.g: export const filterProducts = (products, size) => (dispatch) =>

#Reducers:
return object:
 i) current state denoted by ...state 
 ii)But if I change a value inside this state, it gonna be merged with current state.
case FILTER_PRODUCTS_BY_SIZE:
    return {
        ...state,

    }
#Functional Component: There has no lifecycle methods.

#Model: (Mongoose Schema)
timestamps: true: automatically two fields will be created i)CREATED_AT ii)UPDATED_AT 
#Actions:
Thunk based actions, we need to pass dispatch as a parameter

#React Router:
React Router DOM is a React Router library.

#deploy heroku:
There are three steps to publish on Heroku:
 1) Run production version of website on locally
 2) Create a cloud mongodb database on cloud.mongodb.com
 3) Creating an application on Heroku and publish our works there.

~ 
. To render static files inside build folder:
    app.use("/", express.static(__dirname + "/build"));
. https://www.mongodb.com/cloud
. heroku.com

Procfile: is the file that heroku check that when it wants to start your server. 
heroku git:remote -a yourapp
git rm yarn.lock
git push heroku
